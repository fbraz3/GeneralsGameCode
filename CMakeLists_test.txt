cmake_minimum_required(VERSION 3.25)
project(OpenGLCompileTest)

# Set C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Enable OpenGL support
set(ENABLE_OPENGL ON)
set(ENABLE_DIRECTX OFF)

# Include OpenGL configuration
include(cmake/opengl.cmake)

# Add our graphics library sources
set(GRAPHICS_SOURCES
    Core/Libraries/Source/GraphicsAPI/GraphicsRenderer.cpp
    Core/Libraries/Source/GraphicsAPI/OpenGLRenderer.cpp
    Core/Libraries/Source/GraphicsAPI/W3DRendererAdapter.cpp
)

# Create the test executable
add_executable(test_opengl_compile
    test_opengl_compile.cpp
    ${GRAPHICS_SOURCES}
)

# Add include directories
target_include_directories(test_opengl_compile PRIVATE
    Core/Libraries/Include/GraphicsAPI
    Core/Libraries/Include
    .
)

# Add graphics support
add_graphics_support(test_opengl_compile)

# Compile definitions
target_compile_definitions(test_opengl_compile PRIVATE
    ENABLE_OPENGL=1
)

# Platform-specific linking
if(APPLE)
    target_link_libraries(test_opengl_compile PRIVATE
        "-framework OpenGL"
        "-framework Cocoa"
    )
elseif(UNIX)
    find_package(OpenGL REQUIRED)
    find_package(X11 REQUIRED)
    target_link_libraries(test_opengl_compile PRIVATE
        ${OPENGL_LIBRARIES}
        ${X11_LIBRARIES}
    )
elseif(WIN32)
    target_link_libraries(test_opengl_compile PRIVATE
        opengl32
        gdi32
        user32
    )
endif()
